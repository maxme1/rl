import gym
import torch

from rl_utils.dqn import DQN, epsilon_greedy_action, prepare_train_batch
import rl_utils.dqn as dqn
from rl_utils.interfaces.counter import Counter, linear_decay
from rl_utils.interfaces.memory import FrameLimitMemory
from rl_utils.wrappers import wrap_dqn

env_name = 'BreakoutNoFrameskip-v4'
env = wrap_dqn(gym.make(env_name))

agent = DQN(4, env.action_space.n).cuda()
optimizer = torch.optim.Adam(agent.parameters(), lr=1e-4)

eps_steps = 1e6
eps = Counter(linear_decay(
    # lazy
    start_value=1, end_value=.02, steps=eps_steps
), stop=eps_steps)

memory = FrameLimitMemory(1e5)

gamma = .99
train_batch = prepare_train_batch(
    # lazy
    batch_size=50, stack_size=4
)
calculate_loss = dqn.calculate_loss(
    # lazy
    gamma=gamma
)
get_action = epsilon_greedy_action(
    # lazy
    get_eps=eps, sampler=env.action_space.sample, get_action=dqn.get_action
)
prepare_batch = dqn.prepare_batch(
    # lazy
    size=4
)
